import 'package:flutter/material.dart';

void main() => runApp(LivrosApp());

class Livro {
  String titulo;
  String autor;
  String editora;
  String genero;
  double preco;
  int quantidade;
  String descricao;
  String imagemUrl;
  bool lido;
  bool recomenda;
  double nota;

  Livro({
    required this.titulo,
    required this.autor,
    required this.editora,
    required this.genero,
    required this.preco,
    required this.quantidade,
    required this.descricao,
    required this.imagemUrl,
    required this.lido,
    required this.recomenda,
    required this.nota,
  });
}

class LivrosApp extends StatefulWidget {
  @override
  _LivrosAppState createState() => _LivrosAppState();
}

class _LivrosAppState extends State<LivrosApp> {
  final List<Livro> livros = [];

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Cadastro de Livros',
      theme: ThemeData(primarySwatch: Colors.indigo),
      home: CadastroScreen(onAdd: (livro) {
        setState(() {
          livros.add(livro);
        });
      }, livros: livros),
    );
  }
}

class CadastroScreen extends StatefulWidget {
  final Function(Livro) onAdd;
  final List<Livro> livros;

  CadastroScreen({required this.onAdd, required this.livros});

  @override
  _CadastroScreenState createState() => _CadastroScreenState();
}

class _CadastroScreenState extends State<CadastroScreen> {
  final _formKey = GlobalKey<FormState>();
  final _tituloController = TextEditingController();
  final _autorController = TextEditingController();
  final _editoraController = TextEditingController();
  final _generoController = TextEditingController();
  final _precoController = TextEditingController();
  final _quantidadeController = TextEditingController();
  final _descricaoController = TextEditingController();
  final _imagemUrlController = TextEditingController();
  bool _lido = false;
  bool _recomenda = false;
  double _nota = 5;

  void _cadastrar() {
    if (_formKey.currentState!.validate()) {
      final livro = Livro(
        titulo: _tituloController.text,
        autor: _autorController.text,
        editora: _editoraController.text,
        genero: _generoController.text,
        preco: double.tryParse(_precoController.text) ?? 0.0,
        quantidade: int.tryParse(_quantidadeController.text) ?? 0,
        descricao: _descricaoController.text,
        imagemUrl: _imagemUrlController.text,
        lido: _lido,
        recomenda: _recomenda,
        nota: _nota,
      );

      widget.onAdd(livro);
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => ListaScreen(livros: widget.livros),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Cadastro de Livro')),
      body: Padding(
        padding: const EdgeInsets.all(12.0),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              TextFormField(controller: _tituloController, decoration: InputDecoration(labelText: 'Título'), validator: (v) => v!.isEmpty ? 'Informe o título' : null),
              TextFormField(controller: _autorController, decoration: InputDecoration(labelText: 'Autor(a)'), validator: (v) => v!.isEmpty ? 'Informe o autor' : null),
              TextFormField(controller: _editoraController, decoration: InputDecoration(labelText: 'Editora')),
              TextFormField(controller: _generoController, decoration: InputDecoration(labelText: 'Gênero')),
              TextFormField(
                controller: _precoController,
                decoration: InputDecoration(labelText: 'Preço de venda'),
                keyboardType: TextInputType.number,
                validator: (v) {
                  if (v == null || v.isEmpty) return 'Informe o preço';
                  if (double.tryParse(v) == null) return 'Digite um número válido';
                  return null;
                },
              ),
              TextFormField(controller: _quantidadeController, decoration: InputDecoration(labelText: 'Quantidade'), keyboardType: TextInputType.number, validator: (v) => v!.isEmpty ? 'Informe a quantidade' : null),
              TextFormField(controller: _descricaoController, decoration: InputDecoration(labelText: 'Descrição'), validator: (v) => v!.isEmpty ? 'Informe a descrição' : null),
              TextFormField(controller: _imagemUrlController, decoration: InputDecoration(labelText: 'URL da Capa'), validator: (v) => v!.isEmpty ? 'Informe a URL da capa' : null),
              CheckboxListTile(title: Text('Já leu?'), value: _lido, onChanged: (v) => setState(() => _lido = v!)),
              SwitchListTile(title: Text('Recomendaria?'), value: _recomenda, onChanged: (v) => setState(() => _recomenda = v)),
              Text('Nota: ${_nota.toStringAsFixed(1)}'),
              Slider(value: _nota, min: 0, max: 10, divisions: 20, label: _nota.toStringAsFixed(1), onChanged: (v) => setState(() => _nota = v)),
              SizedBox(height: 10),
              ElevatedButton(onPressed: _cadastrar, child: Text('Cadastrar Livro')),
            ],
          ),
        ),
      ),
    );
  }
}

class ListaScreen extends StatelessWidget {
  final List<Livro> livros;

  ListaScreen({required this.livros});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Livros (${livros.length})')),
      body: ListView.builder(
        itemCount: livros.length,
        itemBuilder: (context, index) {
          final livro = livros[index];
          return ListTile(
            leading: Image.network(livro.imagemUrl, width: 50, height: 50, errorBuilder: (_, __, ___) => Icon(Icons.error)),
            title: Text(livro.titulo),
            subtitle: Text('Autor: ${livro.autor}\nPreço: R\$ ${livro.preco.toStringAsFixed(2)}'),
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(builder: (_) => DetalhesScreen(livro: livro)),
            ),
          );
        },
      ),
    );
  }
}

class DetalhesScreen extends StatelessWidget {
  final Livro livro;

  DetalhesScreen({required this.livro});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Detalhes do Livro')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView(
          children: [
            Image.network(livro.imagemUrl, height: 200, fit: BoxFit.cover, errorBuilder: (_, __, ___) => Icon(Icons.error, size: 100)),
            SizedBox(height: 12),
            Text(livro.titulo, style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),
            Text('Autor: ${livro.autor}'),
            Text('Editora: ${livro.editora}'),
            Text('Gênero: ${livro.genero}'),
            Text('Preço de venda: R\$ ${livro.preco.toStringAsFixed(2)}'),
            Text('Quantidade: ${livro.quantidade}'),
            Text('Descrição:\n${livro.descricao}'),
            SizedBox(height: 8),
            Row(
              children: [
                Icon(livro.lido ? Icons.check_circle : Icons.cancel, color: livro.lido ? Colors.green : Colors.red),
                SizedBox(width: 8),
                Text(livro.lido ? 'Já lido' : 'Não lido'),
              ],
            ),
            Row(
              children: [
                Icon(livro.recomenda ? Icons.thumb_up : Icons.thumb_down, color: livro.recomenda ? Colors.blue : Colors.grey),
                SizedBox(width: 8),
                Text(livro.recomenda ? 'Recomenda' : 'Não recomenda'),
              ],
            ),
            Text('Nota: ${livro.nota.toStringAsFixed(1)}'),
          ],
        ),
      ),
    );
  }
}
